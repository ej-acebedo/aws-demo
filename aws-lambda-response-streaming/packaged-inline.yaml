AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  StreamingFunction:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        exports.handler = awslambda.streamifyResponse(
            async (event, responseStream, context) => {
                const httpResponseMetadata = {
                    statusCode: 200,
                    headers: {
                        "Content-Type": "text/html",
                        "X-Custom-Header": "Example-Custom-Header"
                    }
                };
                responseStream = awslambda.HttpResponseStream.from(responseStream, httpResponseMetadata);
                const text = "AWS Lambda streaming is awesome!";
                for (let i = 0; i < text.length; i++) {
                    const letter = text[i];
                    const html = `<span>${letter}</span>`;
                    responseStream.write(html);
                    await new Promise(r => setTimeout(r, 100));
                }
                responseStream.end();
            }
        );
      Handler: index.handler
      Runtime: nodejs16.x
      Timeout: 30
      MemorySize: 512
  MyFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt StreamingFunction.Arn
      AuthType: NONE
      InvokeMode: RESPONSE_STREAM
  PermissionForURLInvoke:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunctionUrl
      FunctionName: !GetAtt StreamingFunction.Arn
      FunctionUrlAuthType: 'NONE'
      Principal: "*"
Outputs:
  StreamingFunctionURL:
    Description: "Streaming Lambda Function URL"
    Value: !GetAtt MyFunctionUrl.FunctionUrl
